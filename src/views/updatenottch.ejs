<!DOCTYPE html>
<html lang="pt-br" class="h-full bg-gray-900">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dashboard: <%= info.name %></title>
    <script src="https://cdn.tailwindcss.com"></script>
        <link href="../css/cssdir/out.css" rel="stylesheet" />

  </head>
  <body class=" min-h-screen flex items-center justify-center">
    <div class="pages_cont p-8 rounded-lg shadow-md w-full max-w-7xl">
      <div id="mensagemPopUp" class="hidden fixed top-15 right-5 z-50"></div>
      <div class="sm:mx-auto sm:w-full sm:max-w-sm">
        <% if (info.icon && info.icon.indexOf('null') === -1) { %>
          <img src="<%= info.icon %>" alt="Ícone da guilda" class="mx-auto h-20 w-20 rounded-full" />
        <% } else { %>
          <img src="/res/serverIcon/nonserverimg.jpg" alt="Ícone padrão" class="mx-auto h-20 w-20 rounded-full" />
        <% } %>

        <h1 class="mt-6 text-center text-3xl font-bold tracking-tight text-white"><%= info.name %></h1>
        <div class="mt-2 text-center text-sm text-gray-400">
            <p>ID: <%= info.id %></p>
            <p>Membros: <%= info.memberCount %></p>
        </div>

        <div class="mt-6 border-t border-gray-700 pt-4 text-sm">
            <p class="text-gray-300 flex justify-between">
                <span>Notificações Twitch:</span>
                <span class="font-mono px-2 py-1 rounded <%= info5.twitchnotify ? 'bg-green-500/20 text-green-400' : 'bg-red-500/20 text-red-400' %>">
                    <%= info5.twitchnotify ? 'true' : 'false' %>
                </span>
            </p>
            <p class="text-gray-300 mt-2">
                <span>Canal Configurado:</span><br>

                <span class="text-indigo-400" id="channel-name-display"><%= channeltch %></span>
                <span class="text-xs text-gray-500 font-mono">(ID: <%= info5.channeltch %>)</span>
            </p>
        </div>
      </div>


      <div class="mt-8 sm:mx-auto sm:w-full sm:max-w-sm">
        <form id="updtfunctch" method="post" class="space-y-6">
          <div>
            <label for="channelId" class="block text-sm font-medium leading-6 text-gray-100">Alterar Canal para Notificações</label>
            <div class="mt-2">
              <input type="number" id="channelId" name="channelId" required placeholder="Cole o ID do canal de texto" class="block w-full rounded-md bg-white/5 px-3 py-1.5 text-base text-white outline-1 -outline-offset-1 outline-white/10 placeholder:text-gray-500 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-500 sm:text-sm/6" />
            </div>
          </div>
          <input type="hidden" id="guildId" name="guildId" value="<%= info.id %>" />
          <input type="hidden" id="func" name="func" value="updttwitch" />
          <div>
            <button type="button" onclick="envdata()" class="flex w-full justify-center rounded-md bg-indigo-500 px-3 py-1.5 text-sm font-semibold leading-6 text-white hover:bg-indigo-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-500">
              Atualizar Canal
            </button>
          </div>
        </form>
      </div>
    </div>

    <script>
      function exibirMensagemErro(mensagem) {
        const popUp = document.getElementById('mensagemPopUp');
        
        // Cria o visual do pop-up com classes do Tailwind
        popUp.innerHTML = `
          <div class="bg-red-500 text-white font-bold rounded-lg px-4 py-3 shadow-xl" role="alert">
            <p>${mensagem}</p>
          </div>
        `;
        // Mostra o pop-up
        popUp.classList.remove('hidden');
        // Esconde o pop-up automaticamente após 3 segundos
        setTimeout(() => {
          popUp.classList.add('hidden');
        }, 3000);
      }

      // --- SUA FUNÇÃO MODIFICADA ---
      function envdata() {
        var form = document.getElementById('updtfunctch');

        // 1. VERIFICAÇÃO: Checa se o formulário é válido
        // O método checkValidity() respeita os atributos "required" dos seus inputs.
        if (!form.checkValidity()) {
          // 2. Se for inválido, chama a função de erro e para a execução.
          exibirMensagemErro('Por favor, preencha todos os campos obrigatórios.');
          return; // Impede que o resto da função rode
        }

        // 3. Se for válido, o código continua normalmente.
        var formData = new FormData(form);
        // Obtenha os dados do formulário
        var dadosFormulario = $("#updtfunctch").serializeArray();
        // Envie os dados para a função na página pai
        parent.funcsReload(dadosFormulario);
      }
    </script>
  </body>
</html>